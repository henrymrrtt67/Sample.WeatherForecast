name: Build and Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

env:
  image-name: ghcr.io/henrymrrtt67/samples.weatherforecast:${{ github.sha }}
  image-name-unit-tests: unit-tests:latest

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
              
      - name: Unit tests [build]
        run: docker build --target unit-test -t ${{ env.image-name-unit-tests }} .
      
      - name: Unit tests [run]
        run: docker run --rm -v ${{ github.workspace }}/out/test/testresults:/code/test/Samples.WeatherForecast.Api.UnitTest/TestResults ${{ env.image-name-unit-tests }}
        
      - name: Unit tests [results]  
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: unit-test-results
          path: ${{ github.workspace }}/out/test/testresults/

      - name: Unit tests [publish]
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Unit tests
          path: ${{ github.workspace }}/out/test/testresults/test_results_unit_test.trx
          reporter: dotnet-trx
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Code Coverage [Code Climate]
        uses: paambaati/codeclimate-action@v2.7.5
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          files: ${{ github.workspace }}/out/test/testresults/coverage.info
          prefix: /code/

      - name: App [Build]
        run: docker build . -t ${{ env.image-name }}
        
      - name: App [Scan]
        uses: azure/container-scan@v0
        with:
          image-name: ${{ env.image-name }}
          severity-threshold: MEDIUM
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_CR }}
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_CR }}
          
      - name: App [Publish]
        run: docker push ${{ env.image-name }}
